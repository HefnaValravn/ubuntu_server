#!/bin/bash

# Ensure the script is run as root
if [ "$EUID" -ne 0 ]; then
  echo "Error: This script must be run as root or via sudo."
  exit 1
fi

# Defaults and options
RECORD_TYPE="A"
while getopts ":t:" opt; do
  case ${opt} in
    t ) RECORD_TYPE="$OPTARG" ;;
    * ) echo "Usage: sudo dns_add_record -t [A|MX|CNAME] <name> <target> <zone>"; exit 1 ;;
  esac
done
shift $((OPTIND -1))

# Parameters
NAME="$1"
TARGET="$2"
ZONE="$3"
PARENT_ZONE="nicolas-benedettigonzalez.sasm.uclllabs.be"

# Validate parameters based on the record type
if [ "$RECORD_TYPE" = "CNAME" ]; then
  ZONE="$2"
  if [[ "$ZONE" == *."$PARENT_ZONE" ]]; then
    ACTUALZONE=${ZONE%.$PARENT_ZONE}
    if [[ "$ACTUALZONE" == *.* ]]; then
	echo "This is a subzone: $ACTUALZONE"
    else
	ACTUALZONE="$PARENT_ZONE"
else
    ACTUALZONE="$PARENT_ZONE"
  fi

  if [ -z "$NAME" ] || [ -z "$ZONE" ]; then
    echo "Usage for CNAME: sudo dns_add_record -t CNAME <name> <zone>"
    exit 1
  fi
else
  if [ -z "$NAME" ] || [ -z "$TARGET" ] || [ -z "$ZONE" ]; then
    echo "Usage: sudo dns_add_record -t [A|MX|CNAME] <name> <target> <zone>"
    exit 1
  fi
fi



ZONE_FILE="/var/lib/bind/${ZONE}.db"
echo $ZONE_FILE
if [ "$RECORD_TYPE" = "CNAME" ]; then
  ZONE_FILE="/var/lib/bind/${ACTUALZONE}.db"
fi
if [ ! -f "$ZONE_FILE" ]; then
  echo "Zone file for $ZONE not found!"
  exit 1
fi

# Add record to zone file
case $RECORD_TYPE in
  A)
    echo "$NAME    IN    A    $TARGET" >> "$ZONE_FILE"
    ;;
  CNAME)
    echo "$NAME    IN    CNAME    $ZONE". >> "$ZONE_FILE"
    ;;
  MX)
    # Add both MX and A records for RFC compliance
    echo "$NAME    IN    MX    10 $NAME.$ZONE.nicolas-benedettigonzalez.sasm.uclllabs.be." >> "$ZONE_FILE"
    echo "$NAME    IN    A    $TARGET" >> "$ZONE_FILE"
    ;;
  *)
    echo "Invalid record type: $RECORD_TYPE"
    exit 1
    ;;
esac

# Update SOA Serial for the child zone
# Extract the current serial number (first numeric value after 'SOA')
current_serial=$(awk '/SOA/ {getline; print $1 }' "$ZONE_FILE")

new_serial=$(date +%Y%m%d00)

# Check if the current serial has today's date; if so, increment it
if [[ "$current_serial" =~ ^[0-9]+$ && "${current_serial:0:8}" == "$(date +%Y%m%d)" ]]; then
  counter=$((10#${current_serial:8} + 1))
  new_serial="$(date +%Y%m%d)$(printf '%02d' $counter)"
fi

# Replace only the serial number in the correct position
sed -i "/SOA/ {n; s/$current_serial/$new_serial/}" "$ZONE_FILE"


# Reload BIND
if ! /usr/sbin/rndc reload; then
  echo "Failed to reload BIND."
  exit 1
fi

echo "$RECORD_TYPE record added to zone file."
